1. 下载 vue-cli 是脚手架命令行工具，给我们提供一个vue工程的模板
2  vue init webpack study-vue 创建 study-vue 项目 
3 熟悉目录结构
}-- study-vue 
  |-- bulid 项目打包文件
  |--config 配置文件
  |--node_modules 第三方包依赖文件
  |--src 原代码文件
  |--static 静态资源
  |--babelrc 
  |--editorconfig
  |--eslintignore
  |--eslintrc.js
  |--.gitignore 存储时忽略文件
  |--.postcssrc
  |--index.html
  |--package-lock.json
  |--package.json 
  |--README.md  项目介绍
4. 单文件组件：.vue 后缀结尾的文件
Vue.Component('yml-table', {
    props: [],
    template: '<div>xx</div>',
})
.vue 结尾的文件实际上也是写一个组件，但是看起来更加清晰
<template></template>     这里写html
<script></script>         这里写js
<style></style>            这里写css

5. 单页应用和多页应用
多页应用：每次请求一个页面，都要发送一个http请求，返回的都是html文件，优点是浏览器渲染比较快，缺点是页面切换速度慢；
单页应用：切换页面或者路由变化不会向后端发送请求，都是vue在浏览器端通过js渲染改变视图，优点是页面变换速度快，缺点是第一次加载页面速度慢。

6. meta
<meta name="viewport" content="width=device-width,
initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
width=device-width    
initial-scale=1.0          网页初始化大小是1
minimum-scale=1.0          在手机缩放网页最小，比例还是1.0
maximum-scale=1.0          在手机缩放网页最大，比例还是1.0     
user-scalable=no           用户不能缩放

7. 不同手机，对html的样式处理是不一样的 reset.css 这个就是统一样式。

8. 不同手机的分辨率不一样，存在二倍频 三倍频，显示的边框不一样，border.css是在不同倍频下显示的边框是统一的。

9. 在移动端点击链接会有300毫秒的延迟，通过 fastclick 处理延迟问题
首先要 npm install fastclick --save    

10. stylus  CSS预处理器
.container 
  font-size: 20px
  border: 1px solid red
不用写花括弧，也不用在每个属性后面写分号了，还有其它一些有用的语法，等等。上面那三行代码不是 css 代码，在浏览器中直接运行是会报错的。
CSS 处理器就会将上面的语法翻译成 css 代码，如：
.container {
  font-size: 20px;
  border: 1px solid red;
}
CSS 处理器不止有 stylus、还有 less、sass 等等。它们有什么区别呢？？共同点是都能将符合自己语法的代码翻译成 css 代码，不同点是各自的语法不一样。
普通 css 文件长什么样子：xxxx.css
stylus预处理文件长什么样子：xxx.styl
less预处理文件长什么样子：xxxx.less

stylus 在 vue 中怎么用？
使用前先安装 stylus：$ npm install stylus stylus-loader
lang="stylus" 表示 CSS 预处理器用 stylus，scoped 表示样式只对当前 .vue 文件有效
<style lang="stylus" scoped>
.header
    color: red
</style>

11. rem 和 em
rem 是相对根元素 html 的 font-size 计算尺寸的
em 是相对父级元素的 font-size 计算尺寸的

12. iconfont 图标
http://www.iconfont.cn/
怎么选购图标？？
在 vue 里怎么用？？




initialization      n. 初始化
application   n.应用 程序